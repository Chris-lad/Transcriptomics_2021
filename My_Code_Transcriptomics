library(Rsubread)
library(edgeR)
library(gplots)
library(org.Mm.eg.db)
library(RColorBrewer)
library(annotate)



# Building the index in order to speed up the queries
buildindex(basename="Indexed_SmallGenomeMouse",reference="SmallGenomeMouse.fa.gz")



### This line of code indicates to the Rsubread aligner to only consider the fastq.gz files.  
all_12_fastq <- list.files(path = "C:/Users/blado/Desktop/THE ANALYSIS/ReferenceGenome", 
                          pattern = ".fastq.gz$", full.names = TRUE)
### All the fastq.gz files containing the reads are now in this vector. 
all_12_fastq
#### All the  fastq.gz will be now aligned to the index that we have built
align(index = "Indexed_SmallGenomeMouse", readfile1 = all_12_fastq)




## This line of code will cluster all the generated Bam files and put them into this vector. 
all_12_bam <- list.files(path = "C:/Users/blado/Desktop/THE ANALYSIS/ReferenceGenome",
                        pattern = ".BAM$", full.names = TRUE)
all_12_bam
## Recapitulation of the amount of reads that mapped to SmallGenomeMouse
Prop <- propmapped(files=all_12_bam)
Prop



## Let's use the featureCounts function to count the mapped reads 
the_count <- featureCounts(all_12_bam, annot.inbuilt="mm10")
# Checking the slots stored in the_count
names(the_count)
## Let's peek in the stats 
the_count$stat
## Let's peek in the dimensions to observe the number of genes
dim(the_count$counts)
##  These are the first 6 lines
head(the_count$counts)
head(the_count$annotation)





#### Let's write counts to table 
the_count_counts <- the_count$counts
### checking column names
colnames(the_count_counts)
#### changing columns names
colnames(the_count_counts) <- c("DG-BV", "DH-BV", "DI-BP", "DJ-BP", "DK-BL",
                                "DL-BL", "LA-LV", "LB-LV", "LC-LP", "LD-LP",
                                "LE-LL", "LF-LL")
### Converting the_count_counts into a data frame
the_count_counts <- as.data.frame(the_count_counts)
### Let's sort the data frame 
Sorted_counts <- the_count_counts[order(-the_count_counts$`DG-BV`),]
### Converting my row names to a proper column and renaming it. 
Sorted_counts <- cbind(GeneID = rownames(Sorted_counts), Sorted_counts)
### Removing the original row names
rownames(Sorted_counts) <- NULL

### Let's convert the list of GeneID into Gene Name with the getSYMBOL function
Gene_Name <- getSYMBOL(Sorted_counts$GeneID, data='org.Mm.eg.db')
### Merging the obtained gene name with the data frame "Sorted_counts"
Sorted_counts1 <- cbind(Gene_Name, Sorted_counts)
### Removing the again the original row names
rownames(Sorted_counts1) <- NULL

### Let's output the count table in csv format
write.csv(x=Sorted_counts1, file="COUNT_TABLE.csv",row.names=TRUE)
#Let's load data 
CountTable <- read.csv(file = 'COUNT_TABLE.csv', header = TRUE)

